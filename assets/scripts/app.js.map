{
  "version": 3,
  "sources": ["../../src/scripts/utils/canvas.js", "../../src/scripts/utils/inputs.js", "../../src/scripts/app.js"],
  "sourcesContent": ["//---VARIABLE---//\n\nexport default canvas = {\n    el: document.getElementById(\"canvas\"),\n\n    init: function(){\n        this.ctx = this.el.getContext('2d', { alpha: true });\n\n        this.resize();\n\n        window.addEventListener('resize', this.resize.bind(this), false);\n    },\n\n    resize: function(){\n        this.el.width = this.el.clientWidth;\n        this.el.height = this.el.clientHeight;\n    },\n    draw: function(){\n        this.ctx.clearRect(0, 0, this.el.width, this.el.height);\n    \n        // ctx.fillStyle = \"#222024\";\n        // ctx.fillRect(0, 0, canvas.width, canvas.height);\n    }\n}", "//---VARIABLE---//\n// Actions\nexport let debug = false;\nexport let loopPause = true;\nexport let mouseX = 0;\nexport let mouseY = 0;\nexport let mousedown = false;\nexport let ctrl = false;\n\n\nexport function setLoopPause(_value){\n    loopPause = _value;\n}\nlet loopPauseCb = () => {};\nexport function setLoopPauseCb(_cb){\n    loopPauseCb = _cb;\n}\n\n//---EVENT---//\nwindow.addEventListener(\"keydown\", (e) => {\n    // console.log(e.key);\n\n    // if(e.key == \"ArrowUp\")\n    //     up = true;\n    // if(e.key == \"ArrowDown\")\n    //     down = true;\n    // if(e.key == \"ArrowLeft\")\n    //     left = true;\n    // if(e.key == \"ArrowRight\")\n    //     right = true;\n\n    if(e.key == \"Escape\")\n        debug = !debug;\n    if(e.key == \"Enter\"){\n        loopPauseCb();\n    }\n    if(e.key == \"Control\"){\n        ctrl = true;\n    }\n\n});\nwindow.addEventListener(\"keyup\", (e) => {\n    if(e.key == \"Control\"){\n        ctrl = false;\n    }\n\n    // if(e.key == \"ArrowUp\")\n    //     up = false;\n    // if(e.key == \"ArrowDown\")\n    //     down = false;\n    // if(e.key == \"ArrowLeft\")\n    //     left = false;\n    // if(e.key == \"ArrowRight\")\n    //     right = false;\n\n});\n\nwindow.addEventListener('mousedown', e => {\n    mousedown = true;\n});\nwindow.addEventListener('mouseup', e => {\n    mousedown = false;\n});\n\nwindow.addEventListener('mousemove', e => {\n    mouseX = e.pageX;\n    mouseY = e.pageY;\n});", "//---IMPORT---//\nimport canvas from \"./utils/canvas.js\";\n\nimport { \n    debug, loopPause, setLoopPause, setLoopPauseCb, \n    mouseX, mouseY, mousedown, ctrl\n} from \"./utils/inputs.js\";\n\n\n//---VARIABLE---//\n// ASSETS //\nconst optionsSvg = \"/assets/images/icons/options.svg\";\nconst deleteSvg = \"/assets/images/icons/delete.svg\";\n\n// HTML Element //\nconst playBtn = {\n    el: document.getElementById(\"play-btn\"),\n    state: false,\n    init: function(){\n        this.textEl = this.el.querySelector(\".btn_text\"),\n\n        this.el.addEventListener(\"click\", e => {\n            if(this.state){\n                this.pause();\n            }else{\n                this.play();\n            }\n        });\n    },\n    play: function(){\n        this.state = true;\n        this.textEl.innerText = \"Pause\";\n        setLoopPause(false);\n    },\n    pause: function(){\n        this.state = false;\n        this.textEl.innerText = \"Play\";\n        setLoopPause(true);\n    },\n}\n\nconst optionsBtn = {\n    el: document.getElementById(\"options-btn\"),\n    containerEl: document.getElementById(\"options-container\"),\n\n    state: false,\n\n    init: function(){\n        this.imgEl = this.el.querySelector(\"img\"),\n\n        this.el.addEventListener(\"click\", e => {\n            if(this.state){\n                this.close();\n            }else{\n                this.open();\n            }\n        });\n    },\n    open: function(){\n        this.state = true;\n        this.containerEl.classList.remove(\"hide\");\n        this.imgEl.src = deleteSvg;\n    },\n    close: function(){\n        this.state = false;\n        this.containerEl.classList.add(\"hide\");\n        this.imgEl.src = optionsSvg;\n    },\n}\n\nconst nextBtn = {\n    el: document.getElementById(\"next-btn\"),\n\n    init: function(){\n        this.el.addEventListener(\"click\", e => {\n            nextWorldStep();\n        });\n    },\n}\n\n// loops\nlet physicLoop = null;\nconst RATE = 60; // 60\nconst FRAMERATE = 1000 / RATE;\nlet physicLoopEnd = false;\nlet physicLoopTime = null;\n\n\nlet renderLoop = null;\nlet renderTimePrev = null;\n\n\nconst worldWidth = 150;\nconst worldHeight = 50;\nlet world = createEmptyWorld(worldWidth, worldHeight);\nconst cellColor = \"#F65946\";\nconst cursorCellColor = \"#FFFFFF88\";\nlet cellSize;\nlet cellStartX;\nlet cellStartY;\nlet cellEndX;\nlet cellEndY;\n\n\n//---MAIN---//\n////\n//\nworld[0][1] = 1; // y | x\nworld[1][1] = 1;\nworld[2][1] = 1;\n\nworld[5][10] = 1;\nworld[6][10] = 1;\nworld[7][11] = 1;\nworld[4][12] = 1;\nworld[5][13] = 1;\nworld[6][13] = 1;\n\n\nworld[9][19] = 1;\nworld[8][18] = 1;\nworld[10][17] = 1;\nworld[10][18] = 1;\nworld[10][19] = 1;\n\nworld[47][98] = 1;\nworld[48][98] = 1;\nworld[49][98] = 1;\n//\n////\n\n\nplayBtn.init();\noptionsBtn.init();\nnextBtn.init();\n\ncanvas.init();\n\nsetLoopPauseCb(() => {\n    if(loopPause){\n        playBtn.play();\n    }else{\n        playBtn.pause();\n    }\n});\n\n\nwindow.addEventListener('resize', setSize, false);\n\n\nsetSize();\n\n// start physic loop\nupdate();\n\n// start render loop\nrenderTimePrev = performance.now();\nrender(renderTimePrev);\n\n\n//---FUNCTION---//\nfunction setSize(){\n    cellSize = Math.floor(Math.min(canvas.el.width / worldWidth, canvas.el.height / worldHeight));\n    cellStartX = Math.floor((canvas.el.width / 2) - ((worldWidth / 2) * cellSize));\n    cellStartY = Math.floor((canvas.el.height / 2) - ((worldHeight / 2) * cellSize));\n    cellEndX = (worldWidth * cellSize) + cellStartX;\n    cellEndY = (worldHeight * cellSize) + cellStartY;\n}\n\n// loops\nfunction stopRender() {\n    cancelAnimationFrame(renderLoop);\n    renderLoop = null;\n}\nfunction render(t) {\n    renderLoop = requestAnimationFrame(render);\n\n    // if(loopPause)\n    //     stopRender();\n\n    const deltaT = t - renderTimePrev;\n    renderTimePrev = t;\n    \n\n    if(physicLoopEnd || physicLoopTime < FRAMERATE){\n        // console.log(deltaT);\n        canvas.draw();\n\n\n        // WORLD //\n        world.forEach((_line, _y) => {\n            _line.forEach((_value, _x) => {\n                // console.log(_value, _x, _y);\n\n                if(_value){\n                    canvas.ctx.fillStyle = cellColor;\n                    canvas.ctx.fillRect(cellStartX + (_x * cellSize), cellStartY + (_y * cellSize), cellSize, cellSize);\n                }else{\n\n                }\n            });\n        });\n\n\n        // CURSOR //\n        const canvasRect = canvas.el.getBoundingClientRect();\n        const mX = mouseX - canvasRect.left - window.scrollX - cellStartX;\n        const mY = mouseY - canvasRect.top - window.scrollY - cellStartY;\n\n        if(\n            mX > 0 \n            && mX < (cellEndX - cellStartX) \n            && mY > 0 \n            && mY < (cellEndY - cellStartY)\n\n            && !optionsBtn.state\n        ){\n            const indexX = Math.floor(mX / cellSize);\n            const indexY = Math.floor(mY / cellSize);\n            const x = cellStartX + (indexX * cellSize);\n            const y = cellStartY + (indexY * cellSize);\n\n            canvas.ctx.fillStyle = cursorCellColor;\n            canvas.ctx.fillRect(x, y, cellSize, cellSize);\n\n            if(mousedown){\n                if(ctrl){\n                    world[indexY][indexX] = 0;\n                }else{\n                    world[indexY][indexX] = 1;\n                }\n            }\n        }\n\n\n        const borderSize = 2;\n        const longSize = cellSize + borderSize;\n        canvas.ctx.fillStyle = \"#FFFFFF\";\n        canvas.ctx.fillRect(cellStartX - borderSize, cellStartY - borderSize, longSize, borderSize);\n        canvas.ctx.fillRect(cellStartX - borderSize, cellStartY - borderSize, borderSize, longSize);\n\n        canvas.ctx.fillRect(cellEndX + borderSize - longSize, cellStartY - borderSize, longSize, borderSize);\n        canvas.ctx.fillRect(cellEndX, cellStartY - borderSize, borderSize, longSize);\n\n        canvas.ctx.fillRect(cellStartX - borderSize, cellEndY, longSize, borderSize);\n        canvas.ctx.fillRect(cellStartX - borderSize, cellEndY - longSize + borderSize, borderSize, longSize);\n\n        canvas.ctx.fillRect(cellEndX, cellEndY - longSize + borderSize, borderSize, longSize);\n        canvas.ctx.fillRect(cellEndX - longSize + borderSize, cellEndY, longSize, borderSize);\n\n\n        if(debug){\n            const fps = Math.round(1000 / deltaT);\n\n            const indexX = Math.floor(mX / cellSize);\n            const indexY = Math.floor(mY / cellSize);\n    \n            canvas.ctx.fillStyle = \"#fff\";\n            canvas.ctx.font = \"16px sans-serif\";\n            canvas.ctx.fillText(`fps: ${fps}`, 10, 30);\n            canvas.ctx.fillText(`looptime: ${physicLoopTime}`, 10, 60);\n            canvas.ctx.fillText(`mouse: ${mX}, ${mY}`, 10, 90);\n            canvas.ctx.fillText(`index: ${indexX}, ${indexY}`, 10, 120);\n        }\n    }\n\n}\nfunction stopUpdate(){\n    clearTimeout(physicLoop);\n    physicLoop = null;\n}\nfunction update(){\n    physicLoop = setTimeout(function() {\n        if(!loopPause){\n            if(!renderLoop)\n                render(performance.now());\n\n            physicLoopEnd = false;\n            const tStart = performance.now();\n            \n\n            nextWorldStep();\n        \n\n            const tEnd = performance.now();\n            physicLoopTime = tEnd - tStart;\n            physicLoopEnd = true;\n        }\n\n        update();\n    }, FRAMERATE);\n}\n\nfunction nextWorldStep(){\n    const tempWorld = createEmptyWorld(worldWidth, worldHeight);\n\n    world.forEach((_line, _y) => {\n        _line.forEach((_value, _x) => {\n            // console.log(_value, _x, _y);\n\n            const lifeCells = countLifeCells(_x, _y, world);\n\n            // if(lifeCells > 0){\n            //     tempWorld[_y][_x] = 1;\n            // }\n\n            if(_value){\n                if(!(lifeCells != 2 && lifeCells != 3)){\n                    tempWorld[_y][_x] = 1;\n                }\n            }else{\n                if(lifeCells == 3){\n                    tempWorld[_y][_x] = 1;\n                }\n            }\n        });\n    });\n\n    world = tempWorld;\n}\n\n\nfunction createEmptyWorld(_width, _height){\n    const world = [];\n\n    for(let _y = 0; _y < _height; _y++){\n        const line = [];\n        \n        for(let _x = 0; _x < _width; _x++){\n            line.push(0);\n        }\n\n        world.push(line);\n    }\n\n    return world;\n}\n\nfunction countLifeCells(_x, _y, _world){\n    let count = 0;\n\n    // 1 2 3\n    // 4 0 5\n    // 6 7 8\n    const index = {\n        1: [_x-1, _y-1],\n        2: [_x, _y-1],\n        3: [_x+1, _y-1],\n        4: [_x-1, _y],\n        5: [_x+1, _y],\n        6: [_x-1, _y+1],\n        7: [_x, _y+1],\n        8: [_x+1, _y+1],\n    };\n\n    if(!(_x - 1 >= 0)){\n        delete index[1];\n        delete index[4];\n        delete index[6];\n    }\n    if(!(_x + 1 < _world[_y].length)){\n        delete index[3];\n        delete index[5];\n        delete index[8];\n    }\n    if(!(_y - 1 >= 0)){\n        delete index[1];\n        delete index[2];\n        delete index[3];\n    }\n    if(!(_y + 1 < _world.length)){\n        delete index[6];\n        delete index[7];\n        delete index[8];\n    }\n\n    for(const i in index){\n        if(_world[index[i][1]][index[i][0]]){\n            count++;\n        }\n    }\n\n    return count;\n}"],
  "mappings": ";;AAEA,MAAO,iBAAQ,SAAS;AAAA,IACpB,IAAI,SAAS,eAAe,QAAQ;AAAA,IAEpC,MAAM,WAAU;AACZ,WAAK,MAAM,KAAK,GAAG,WAAW,MAAM,EAAE,OAAO,KAAK,CAAC;AAEnD,WAAK,OAAO;AAEZ,aAAO,iBAAiB,UAAU,KAAK,OAAO,KAAK,IAAI,GAAG,KAAK;AAAA,IACnE;AAAA,IAEA,QAAQ,WAAU;AACd,WAAK,GAAG,QAAQ,KAAK,GAAG;AACxB,WAAK,GAAG,SAAS,KAAK,GAAG;AAAA,IAC7B;AAAA,IACA,MAAM,WAAU;AACZ,WAAK,IAAI,UAAU,GAAG,GAAG,KAAK,GAAG,OAAO,KAAK,GAAG,MAAM;AAAA,IAI1D;AAAA,EACJ;;;ACrBO,MAAI,QAAQ;AACZ,MAAI,YAAY;AAChB,MAAI,SAAS;AACb,MAAI,SAAS;AACb,MAAI,YAAY;AAChB,MAAI,OAAO;AAGX,wBAAsB,QAAO;AAChC,gBAAY;AAAA,EAChB;AACA,MAAI,cAAc,MAAM;AAAA,EAAC;AAClB,0BAAwB,KAAI;AAC/B,kBAAc;AAAA,EAClB;AAGA,SAAO,iBAAiB,WAAW,CAAC,MAAM;AAYtC,QAAG,EAAE,OAAO;AACR,cAAQ,CAAC;AACb,QAAG,EAAE,OAAO,SAAQ;AAChB,kBAAY;AAAA,IAChB;AACA,QAAG,EAAE,OAAO,WAAU;AAClB,aAAO;AAAA,IACX;AAAA,EAEJ,CAAC;AACD,SAAO,iBAAiB,SAAS,CAAC,MAAM;AACpC,QAAG,EAAE,OAAO,WAAU;AAClB,aAAO;AAAA,IACX;AAAA,EAWJ,CAAC;AAED,SAAO,iBAAiB,aAAa,OAAK;AACtC,gBAAY;AAAA,EAChB,CAAC;AACD,SAAO,iBAAiB,WAAW,OAAK;AACpC,gBAAY;AAAA,EAChB,CAAC;AAED,SAAO,iBAAiB,aAAa,OAAK;AACtC,aAAS,EAAE;AACX,aAAS,EAAE;AAAA,EACf,CAAC;;;ACxDD,MAAM,aAAa;AACnB,MAAM,YAAY;AAGlB,MAAM,UAAU;AAAA,IACZ,IAAI,SAAS,eAAe,UAAU;AAAA,IACtC,OAAO;AAAA,IACP,MAAM,WAAU;AACZ,WAAK,SAAS,KAAK,GAAG,cAAc,WAAW,GAE/C,KAAK,GAAG,iBAAiB,SAAS,OAAK;AACnC,YAAG,KAAK,OAAM;AACV,eAAK,MAAM;AAAA,QACf,OAAK;AACD,eAAK,KAAK;AAAA,QACd;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,MAAM,WAAU;AACZ,WAAK,QAAQ;AACb,WAAK,OAAO,YAAY;AACxB,mBAAa,KAAK;AAAA,IACtB;AAAA,IACA,OAAO,WAAU;AACb,WAAK,QAAQ;AACb,WAAK,OAAO,YAAY;AACxB,mBAAa,IAAI;AAAA,IACrB;AAAA,EACJ;AAEA,MAAM,aAAa;AAAA,IACf,IAAI,SAAS,eAAe,aAAa;AAAA,IACzC,aAAa,SAAS,eAAe,mBAAmB;AAAA,IAExD,OAAO;AAAA,IAEP,MAAM,WAAU;AACZ,WAAK,QAAQ,KAAK,GAAG,cAAc,KAAK,GAExC,KAAK,GAAG,iBAAiB,SAAS,OAAK;AACnC,YAAG,KAAK,OAAM;AACV,eAAK,MAAM;AAAA,QACf,OAAK;AACD,eAAK,KAAK;AAAA,QACd;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IACA,MAAM,WAAU;AACZ,WAAK,QAAQ;AACb,WAAK,YAAY,UAAU,OAAO,MAAM;AACxC,WAAK,MAAM,MAAM;AAAA,IACrB;AAAA,IACA,OAAO,WAAU;AACb,WAAK,QAAQ;AACb,WAAK,YAAY,UAAU,IAAI,MAAM;AACrC,WAAK,MAAM,MAAM;AAAA,IACrB;AAAA,EACJ;AAEA,MAAM,UAAU;AAAA,IACZ,IAAI,SAAS,eAAe,UAAU;AAAA,IAEtC,MAAM,WAAU;AACZ,WAAK,GAAG,iBAAiB,SAAS,OAAK;AACnC,sBAAc;AAAA,MAClB,CAAC;AAAA,IACL;AAAA,EACJ;AAGA,MAAI,aAAa;AACjB,MAAM,OAAO;AACb,MAAM,YAAY,MAAO;AACzB,MAAI,gBAAgB;AACpB,MAAI,iBAAiB;AAGrB,MAAI,aAAa;AACjB,MAAI,iBAAiB;AAGrB,MAAM,aAAa;AACnB,MAAM,cAAc;AACpB,MAAI,QAAQ,iBAAiB,YAAY,WAAW;AACpD,MAAM,YAAY;AAClB,MAAM,kBAAkB;AACxB,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AAMJ,QAAM,GAAG,KAAK;AACd,QAAM,GAAG,KAAK;AACd,QAAM,GAAG,KAAK;AAEd,QAAM,GAAG,MAAM;AACf,QAAM,GAAG,MAAM;AACf,QAAM,GAAG,MAAM;AACf,QAAM,GAAG,MAAM;AACf,QAAM,GAAG,MAAM;AACf,QAAM,GAAG,MAAM;AAGf,QAAM,GAAG,MAAM;AACf,QAAM,GAAG,MAAM;AACf,QAAM,IAAI,MAAM;AAChB,QAAM,IAAI,MAAM;AAChB,QAAM,IAAI,MAAM;AAEhB,QAAM,IAAI,MAAM;AAChB,QAAM,IAAI,MAAM;AAChB,QAAM,IAAI,MAAM;AAKhB,UAAQ,KAAK;AACb,aAAW,KAAK;AAChB,UAAQ,KAAK;AAEb,iBAAO,KAAK;AAEZ,iBAAe,MAAM;AACjB,QAAG,WAAU;AACT,cAAQ,KAAK;AAAA,IACjB,OAAK;AACD,cAAQ,MAAM;AAAA,IAClB;AAAA,EACJ,CAAC;AAGD,SAAO,iBAAiB,UAAU,SAAS,KAAK;AAGhD,UAAQ;AAGR,SAAO;AAGP,mBAAiB,YAAY,IAAI;AACjC,SAAO,cAAc;AAIrB,qBAAkB;AACd,eAAW,KAAK,MAAM,KAAK,IAAI,eAAO,GAAG,QAAQ,YAAY,eAAO,GAAG,SAAS,WAAW,CAAC;AAC5F,iBAAa,KAAK,MAAO,eAAO,GAAG,QAAQ,IAAO,aAAa,IAAK,QAAS;AAC7E,iBAAa,KAAK,MAAO,eAAO,GAAG,SAAS,IAAO,cAAc,IAAK,QAAS;AAC/E,eAAY,aAAa,WAAY;AACrC,eAAY,cAAc,WAAY;AAAA,EAC1C;AAOA,kBAAgB,GAAG;AACf,iBAAa,sBAAsB,MAAM;AAKzC,UAAM,SAAS,IAAI;AACnB,qBAAiB;AAGjB,QAAG,iBAAiB,iBAAiB,WAAU;AAE3C,qBAAO,KAAK;AAIZ,YAAM,QAAQ,CAAC,OAAO,OAAO;AACzB,cAAM,QAAQ,CAAC,QAAQ,OAAO;AAG1B,cAAG,QAAO;AACN,2BAAO,IAAI,YAAY;AACvB,2BAAO,IAAI,SAAS,aAAc,KAAK,UAAW,aAAc,KAAK,UAAW,UAAU,QAAQ;AAAA,UACtG,OAAK;AAAA,UAEL;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAID,YAAM,aAAa,eAAO,GAAG,sBAAsB;AACnD,YAAM,KAAK,SAAS,WAAW,OAAO,OAAO,UAAU;AACvD,YAAM,KAAK,SAAS,WAAW,MAAM,OAAO,UAAU;AAEtD,UACI,KAAK,KACF,KAAM,WAAW,cACjB,KAAK,KACL,KAAM,WAAW,cAEjB,CAAC,WAAW,OAClB;AACG,cAAM,SAAS,KAAK,MAAM,KAAK,QAAQ;AACvC,cAAM,SAAS,KAAK,MAAM,KAAK,QAAQ;AACvC,cAAM,IAAI,aAAc,SAAS;AACjC,cAAM,IAAI,aAAc,SAAS;AAEjC,uBAAO,IAAI,YAAY;AACvB,uBAAO,IAAI,SAAS,GAAG,GAAG,UAAU,QAAQ;AAE5C,YAAG,WAAU;AACT,cAAG,MAAK;AACJ,kBAAM,QAAQ,UAAU;AAAA,UAC5B,OAAK;AACD,kBAAM,QAAQ,UAAU;AAAA,UAC5B;AAAA,QACJ;AAAA,MACJ;AAGA,YAAM,aAAa;AACnB,YAAM,WAAW,WAAW;AAC5B,qBAAO,IAAI,YAAY;AACvB,qBAAO,IAAI,SAAS,aAAa,YAAY,aAAa,YAAY,UAAU,UAAU;AAC1F,qBAAO,IAAI,SAAS,aAAa,YAAY,aAAa,YAAY,YAAY,QAAQ;AAE1F,qBAAO,IAAI,SAAS,WAAW,aAAa,UAAU,aAAa,YAAY,UAAU,UAAU;AACnG,qBAAO,IAAI,SAAS,UAAU,aAAa,YAAY,YAAY,QAAQ;AAE3E,qBAAO,IAAI,SAAS,aAAa,YAAY,UAAU,UAAU,UAAU;AAC3E,qBAAO,IAAI,SAAS,aAAa,YAAY,WAAW,WAAW,YAAY,YAAY,QAAQ;AAEnG,qBAAO,IAAI,SAAS,UAAU,WAAW,WAAW,YAAY,YAAY,QAAQ;AACpF,qBAAO,IAAI,SAAS,WAAW,WAAW,YAAY,UAAU,UAAU,UAAU;AAGpF,UAAG,OAAM;AACL,cAAM,MAAM,KAAK,MAAM,MAAO,MAAM;AAEpC,cAAM,SAAS,KAAK,MAAM,KAAK,QAAQ;AACvC,cAAM,SAAS,KAAK,MAAM,KAAK,QAAQ;AAEvC,uBAAO,IAAI,YAAY;AACvB,uBAAO,IAAI,OAAO;AAClB,uBAAO,IAAI,SAAS,QAAQ,OAAO,IAAI,EAAE;AACzC,uBAAO,IAAI,SAAS,aAAa,kBAAkB,IAAI,EAAE;AACzD,uBAAO,IAAI,SAAS,UAAU,OAAO,MAAM,IAAI,EAAE;AACjD,uBAAO,IAAI,SAAS,UAAU,WAAW,UAAU,IAAI,GAAG;AAAA,MAC9D;AAAA,IACJ;AAAA,EAEJ;AAKA,oBAAiB;AACb,iBAAa,WAAW,WAAW;AAC/B,UAAG,CAAC,WAAU;AACV,YAAG,CAAC;AACA,iBAAO,YAAY,IAAI,CAAC;AAE5B,wBAAgB;AAChB,cAAM,SAAS,YAAY,IAAI;AAG/B,sBAAc;AAGd,cAAM,OAAO,YAAY,IAAI;AAC7B,yBAAiB,OAAO;AACxB,wBAAgB;AAAA,MACpB;AAEA,aAAO;AAAA,IACX,GAAG,SAAS;AAAA,EAChB;AAEA,2BAAwB;AACpB,UAAM,YAAY,iBAAiB,YAAY,WAAW;AAE1D,UAAM,QAAQ,CAAC,OAAO,OAAO;AACzB,YAAM,QAAQ,CAAC,QAAQ,OAAO;AAG1B,cAAM,YAAY,eAAe,IAAI,IAAI,KAAK;AAM9C,YAAG,QAAO;AACN,cAAG,CAAE,cAAa,KAAK,aAAa,IAAG;AACnC,sBAAU,IAAI,MAAM;AAAA,UACxB;AAAA,QACJ,OAAK;AACD,cAAG,aAAa,GAAE;AACd,sBAAU,IAAI,MAAM;AAAA,UACxB;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAED,YAAQ;AAAA,EACZ;AAGA,4BAA0B,QAAQ,SAAQ;AACtC,UAAM,SAAQ,CAAC;AAEf,aAAQ,KAAK,GAAG,KAAK,SAAS,MAAK;AAC/B,YAAM,OAAO,CAAC;AAEd,eAAQ,KAAK,GAAG,KAAK,QAAQ,MAAK;AAC9B,aAAK,KAAK,CAAC;AAAA,MACf;AAEA,aAAM,KAAK,IAAI;AAAA,IACnB;AAEA,WAAO;AAAA,EACX;AAEA,0BAAwB,IAAI,IAAI,QAAO;AACnC,QAAI,QAAQ;AAKZ,UAAM,QAAQ;AAAA,MACV,GAAG,CAAC,KAAG,GAAG,KAAG,CAAC;AAAA,MACd,GAAG,CAAC,IAAI,KAAG,CAAC;AAAA,MACZ,GAAG,CAAC,KAAG,GAAG,KAAG,CAAC;AAAA,MACd,GAAG,CAAC,KAAG,GAAG,EAAE;AAAA,MACZ,GAAG,CAAC,KAAG,GAAG,EAAE;AAAA,MACZ,GAAG,CAAC,KAAG,GAAG,KAAG,CAAC;AAAA,MACd,GAAG,CAAC,IAAI,KAAG,CAAC;AAAA,MACZ,GAAG,CAAC,KAAG,GAAG,KAAG,CAAC;AAAA,IAClB;AAEA,QAAG,CAAE,MAAK,KAAK,IAAG;AACd,aAAO,MAAM;AACb,aAAO,MAAM;AACb,aAAO,MAAM;AAAA,IACjB;AACA,QAAG,CAAE,MAAK,IAAI,OAAO,IAAI,SAAQ;AAC7B,aAAO,MAAM;AACb,aAAO,MAAM;AACb,aAAO,MAAM;AAAA,IACjB;AACA,QAAG,CAAE,MAAK,KAAK,IAAG;AACd,aAAO,MAAM;AACb,aAAO,MAAM;AACb,aAAO,MAAM;AAAA,IACjB;AACA,QAAG,CAAE,MAAK,IAAI,OAAO,SAAQ;AACzB,aAAO,MAAM;AACb,aAAO,MAAM;AACb,aAAO,MAAM;AAAA,IACjB;AAEA,eAAU,KAAK,OAAM;AACjB,UAAG,OAAO,MAAM,GAAG,IAAI,MAAM,GAAG,KAAI;AAChC;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;",
  "names": []
}
